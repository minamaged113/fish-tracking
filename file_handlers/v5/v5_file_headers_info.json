{
    "file": {
        "version": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 0,
            "title": "Version",
            "description": "File format version DDF_05",
            "default": "0x05464444",
            "more": null,
            "order": 0,
            "obsolete":null
        },
        "frameCount": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 4,
            "title": "frameCount",
            "description": "Total number of frames in a given file",
            "default": null,
            "more": "The value of this variable should be equal to the number of frames read from the file, which is calculated from file size and number of beams multiplied by the number of samples",
            "order": 1,
            "obsolete": false
        },
        "frameRate": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 8,
            "title": "Frame rate",
            "description": "Initial recorded frame rate",
            "default": null,
            "more": "should be read from frame header, it might happen that a frame has its own different framerate",
            "order": 2,
            "obsolete":null
        },
        "highResolution": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 12,
            "title": "High resolution",
            "description": "If the value is zero, then frames are in low resolution. Otherwise, high resolution",
            "default": null,
            "more": "Each frame has its own value, so frame headers should be considered",
            "order": 3,
            "obsolete":null
        },
        "numRawBeams": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 16,
            "title": "Number of Beams",
            "description": "Number of beams produced by the hardware. It is considered the X-axis of the produced images.",
            "default": null,
            "more": "Each model of hardware has its own number of beams, ARIS 3000 has 128 or 64, ARIS 1800 has 96 or 48 and ARIS 1200 has 48 beams. However, every frame might contain different information, so frame headers should be considered.",
            "order": 4,
            "obsolete":null
        },
        "sampleRate": {
            "size": "float",
            "bytes" : 4,
            "location": 20,
            "title": "Sample rate",
            "description": "It is the reciprocal of the sample period",
            "default": null,
            "more": "Each frame might have different sample rate, so frame header should be considered",
            "order": 5,
            "obsolete":null
        },
        "samplesPerChannel": {
            "size": "uint32_t",
            "bytes" : 4,
            "location":24 ,
            "title": "Samples per Channel",
            "description": "Number of range sample in each beam produced by the hardware. It is considered the Y-axis of the produced images",
            "default": null,
            "more": "Each frame might have different value, so frame header should be considered.",
            "order": 6,
            "obsolete":null
        },
        "receiverGain": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 28,
            "title": "Receiver Gain (dB)",
            "description": "Relative gain in dB, has values ranging from 0 to 40",
            "default": null,
            "more": "Each frame might have different value, so frame header should be considered.",
            "order": 7,
            "obsolete":null
        },
        "windowStart": {
            "size": "float",
            "bytes" : 4,
            "location": 32,
            "title": "Window start (m)",
            "description": "Image window start range in meters",
            "default": null,
            "more": "Each frame might have different value, so frame header should be considered.",
            "order": 8,
            "obsolete":null
        },
        "windowLength": {
            "size": "float",
            "bytes" : 4,
            "location":36 ,
            "title": "Window length (m)",
            "description": "Image window length in meters",
            "default": null,
            "more": "Each frame might have different value, so frame header should be considered.",
            "order": 9,
            "obsolete":null
        },
        "reverse": {
            "size": "uint32_t",
            "bytes" : 4,
            "location":40 ,
            "title": "Lens position",
            "description": "Lens position either up or down.",
            "default": null,
            "more": "If the hardware is DIDSON, then a non-zero value would indicate the lens is facing down. However, in case of ARIS, a non-zero value indicates a lens facing upwards. Otherwise, if zero value, it means the opposite of what has been stated.",
            "order": 10,
            "obsolete":null
        },
        "serialNumber": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 44,
            "title": "Serial Number",
            "description": "Serial number of the SONAR hardware.",
            "default": null,
            "more": null,
            "order": 11,
            "obsolete":null
        },
        "strDate": {
            "size": "char[32]",
            "bytes" : 4,
            "location": 48,
            "title": "Date",
            "description": "Date of recording the file.",
            "default": null,
            "more": null,
            "order": 12,
            "obsolete":null
        },
        "strHeaderID": {
            "size": "char[256]",
            "bytes" : 256,
            "location": 80, 
            "title": "Header ID",
            "description": "User input to identify file.",
            "default": null,
            "more": null,
            "order": 13,
            "obsolete":null
        },
        "userID1": {
            "size": "int32_t",
            "bytes" : 4,
            "location": 336,
            "title": "User 1 ID",
            "description": "User-defined integer quantity",
            "default": null,
            "more": null,
            "order": 14,
            "obsolete":null
        },
        "userID2": {
            "size": "int32_t",
            "bytes" : 4,
            "location": 340,
            "title": "User 2 ID",
            "description": "User-defined integer quantity",
            "default": null,
            "more": null,
            "order": 15,
            "obsolete":null
        },
        "userID3": {
            "size": "int32_t",
            "bytes" : 4,
            "location": 344,
            "title": "User 3 ID",
            "description": "User-defined integer quantity",
            "default": null,
            "more": null,
            "order": 16,
            "obsolete":null
        },
        "userID4": {
            "size": "int32_t",
            "bytes" : 4,
            "location": 348,
            "title": "User 4 ID",
            "description": "User-defined integer quantity",
            "default": null,
            "more": null,
            "order": 17,
            "obsolete":null
        },
        "startFrame": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 352,
            "title": "First frame #",
            "description": "First frame number from source file",
            "default": null,
            "more": "For DIDSON snippet files",
            "order": 18,
            "obsolete":null
        },
        "endFrame": {
            "size": "uint32_t",
            "bytes" : 4,
            "location":356 ,
            "title": "Last frame #",
            "description": "Last frame number from source file",
            "default": null,
            "more": "For DIDSON snippet files",
            "order": 19,
            "obsolete":null
        },
        "timelapse": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 360,
            "title": "Timelapse",
            "description": "If non-zero, it indicates Timelapse recording mode. Otherwise, no Timelapse.",
            "default": null,
            "more": "Indicates whether recording was made in timelapse mode or not.",
            "order": 20,
            "obsolete": false
        },
        "recordInterval": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 364,
            "title": "Record Interval",
            "description": "Number of frames/seconds between recorded frames",
            "default": null,
            "more": null,
            "order": 21,
            "obsolete": false
        },
        "radioSecond": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 368,
            "title": "Radio Second",
            "description": "Frames or seconds interval",
            "default": null,
            "more": null,
            "order": 22,
            "obsolete": false
        },
        "frameInterval": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 372,
            "title": "Frame Interval",
            "description": "Record every Nth frame",
            "default": null,
            "more": null,
            "order": 23,
            "obsolete": false
        },
        "flags": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 376,
            "title": "Flags",
            "description": "See DDF_04 file format document",
            "default": null,
            "more": null,
            "order": 24,
            "obsolete": true
        },
        "auxFlags": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 380,
            "title": "Auxiliary Flags",
            "description": "See DDF_04 file format document",
            "default": null,
            "more": null,
            "order": 25,
            "obsolete": true
        },
        "soundVelocity": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 384,
            "title": "Sound Velocity",
            "description": "Sound velocity in water",
            "default": null,
            "more": null,
            "order": 26,
            "obsolete": true
        },
        "flags3D": {
            "size": "uint32_t",
            "bytes" :4 ,
            "location": 388,
            "title": "3D Flags",
            "description": "See DDF_04 file format document",
            "default": null,
            "more": null,
            "order": 27,
            "obsolete": true
        },
        "softwareVersion": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 392,
            "title": "Software Version",
            "description": "DIDSON software version that recorded the file",
            "default": null,
            "more": null,
            "order": 28,
            "obsolete": false
        },
        "waterTemp": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 396,
            "title": "Water Temperature",
            "description": "Water temperature code:  0 = 5-15C, 1 = 15-25C, 2 = 25-35C",
            "default": null,
            "more": null,
            "order": 29,
            "obsolete": false
        },
        "salinity": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 400,
            "title": "Salinity",
            "description": "Salinity code:  0 = fresh, 1 = brackish, 2 = salt",
            "default": null,
            "more": null,
            "order": 30,
            "obsolete": false
        },
        "pulseLength": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 404,
            "title": "Pulse Length",
            "description": null,
            "default": null,
            "more": "Added for ARIS but not used",
            "order": 31,
            "obsolete": true
        },
        "TxMode": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 408,
            "title": "Transmitter Mode",
            "description": null,
            "default": null,
            "more": "Added for ARIS but not used",
            "order": 32,
            "obsolete": true
        },
        "versionFPGA": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 412,
            "title": "versionFPGA",
            "description": null,
            "default": null,
            "more": "Reserved for future use",
            "order": 33,
            "obsolete": true
        },
        "versionPSuC": {
            "size": "uint32_t",
            "bytes" : 4,
            "location": 416,
            "title": "VersionPSuC",
            "description": null,
            "default": null,
            "more": "Reserved for future use",
            "order": 34,
            "obsolete": true
        },
        "thumbnailFI": {
            "size": "uint32_t",
            "bytes" :4 ,
            "location": 420,
            "title": "Frame Index Thumbnail",
            "description": "Frame index of frame used for thumbnail image of file",
            "default": null,
            "more": null,
            "order": 35,
            "obsolete": false
        },
        "fileSize": {
            "size": "uint64_t",
            "bytes" : 8,
            "location" : 424,
            "title": "File Size",
            "description": "Total file size in bytes",
            "default": null,
            "more": "Do not use; query your filesystem instead",
            "order": 36,
            "obsolete": true
        },
        "optionalHeaderSize": {
            "size": "uint64_t",
            "bytes" :8 ,
            "location": 432,
            "title": "Optional Header Size",
            "description": null,
            "default": null,
            "more": "Reserved for future use",
            "order": 37,
            "obsolete": true
        },
        "optionalTailSize": {
            "size": "uint64_t",
            "bytes" :8 ,
            "location": 440,
            "title": "Optional Tail Size",
            "description": null,
            "default": null,
            "more": "Reserved for future use",
            "order": 38,
            "obsolete": true
        },
        "versionMinor": {
            "size": "uint32_t",
            "bytes" :4 ,
            "location": 448,
            "title": "DIDSON Version Minor",
            "description": null,
            "default": null,
            "more": "Obsolete",
            "order": 39,
            "obsolete": true
        },
        "largeLens": {
            "size": "uint32_t",
            "bytes" :4 ,
            "location": 452,
            "title": "Large Lens",
            "description": "Non-zero if telephoto lens (large lens, hi-res lens, big lens) is present",
            "default": null,
            "more": "Check frame headers instead",
            "order": 40,
            "obsolete": true
        }
    },
    "headerSize" : {
        "size" : 1024,
        "unit" : "byte"
    }
}